// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.48.1.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names

import 'dart:convert';
import 'dart:async';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';

import 'package:meta/meta.dart';
import 'package:meta/meta.dart';
import 'dart:ffi' as ffi;

abstract class FlutterExample {
  Future<List<String>> makeManyRequests({required int n, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kMakeManyRequestsConstMeta;
}

class FlutterExampleImpl implements FlutterExample {
  final FlutterExamplePlatform _platform;
  factory FlutterExampleImpl(ExternalLibrary dylib) =>
      FlutterExampleImpl.raw(FlutterExamplePlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory FlutterExampleImpl.wasm(FutureOr<WasmModule> module) =>
      FlutterExampleImpl(module as ExternalLibrary);
  FlutterExampleImpl.raw(this._platform);
  Future<List<String>> makeManyRequests({required int n, dynamic hint}) =>
      _platform.executeNormal(FlutterRustBridgeTask(
        callFfi: (port_) => _platform.inner
            .wire_make_many_requests(port_, _platform.api2wire_u64(n)),
        parseSuccessData: _wire2api_StringList,
        constMeta: kMakeManyRequestsConstMeta,
        argValues: [n],
        hint: hint,
      ));

  FlutterRustBridgeTaskConstMeta get kMakeManyRequestsConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "make_many_requests",
        argNames: ["n"],
      );
}

// Section: api2wire

// Section: wire2api

String _wire2api_String(dynamic raw) {
  return raw as String;
}

List<String> _wire2api_StringList(dynamic raw) {
  return (raw as List<dynamic>).cast<String>();
}

int _wire2api_u8(dynamic raw) {
  return raw as int;
}

Uint8List _wire2api_uint_8_list(dynamic raw) {
  return raw as Uint8List;
}

class FlutterExamplePlatform extends FlutterRustBridgeBase<FlutterExampleWire> {
  FlutterExamplePlatform(ffi.DynamicLibrary dylib)
      : super(FlutterExampleWire(dylib));
// Section: api2wire

  @protected
  int api2wire_u64(int raw) {
    return raw;
  }
// Section: api_fill_to_wire

}

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.

/// generated by flutter_rust_bridge
class FlutterExampleWire implements FlutterRustBridgeWireBase {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  FlutterExampleWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  FlutterExampleWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void store_dart_post_cobject(
    DartPostCObjectFnType ptr,
  ) {
    return _store_dart_post_cobject(
      ptr,
    );
  }

  late final _store_dart_post_cobjectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(DartPostCObjectFnType)>>(
          'store_dart_post_cobject');
  late final _store_dart_post_cobject = _store_dart_post_cobjectPtr
      .asFunction<void Function(DartPostCObjectFnType)>();

  void wire_make_many_requests(
    int port_,
    int n,
  ) {
    return _wire_make_many_requests(
      port_,
      n,
    );
  }

  late final _wire_make_many_requestsPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint64)>>(
          'wire_make_many_requests');
  late final _wire_make_many_requests =
      _wire_make_many_requestsPtr.asFunction<void Function(int, int)>();

  void free_WireSyncReturnStruct(
    WireSyncReturnStruct val,
  ) {
    return _free_WireSyncReturnStruct(
      val,
    );
  }

  late final _free_WireSyncReturnStructPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(WireSyncReturnStruct)>>(
          'free_WireSyncReturnStruct');
  late final _free_WireSyncReturnStruct = _free_WireSyncReturnStructPtr
      .asFunction<void Function(WireSyncReturnStruct)>();
}

typedef DartPostCObjectFnType = ffi.Pointer<
    ffi.NativeFunction<ffi.Bool Function(DartPort, ffi.Pointer<ffi.Void>)>>;
typedef DartPort = ffi.Int64;
